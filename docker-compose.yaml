version: '3.8'

services:
  db:
    image: postgres:14
    env_file:
      - setting.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  init-db:
    build: .
    env_file:
      - setting.env
    depends_on:
      - db
    entrypoint: ["/app/entrypoint.sh"]
    command: >
      bash -c "
      echo 'Создаём таблицы...';
      python - << 'PYCODE'
      from app import create_app, db
      import os
      app = create_app(os.getenv('FLASK_CONFIG'))
      with app.app_context():
          db.create_all()
      PYCODE
      "

  web:
    build: .
    env_file:
      - setting.env
    depends_on:
      - init-db
    entrypoint: ["/app/entrypoint.sh"]
    command: >
      gunicorn
      -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker
      --workers 1
      --bind 0.0.0.0:5000
      run:app
    ports:
      - "5000:5000"
    volumes:
      - reports_data:/app/reports

  report-generator:
    build: .
    env_file:
      - setting.env
    depends_on:
      - init-db
    entrypoint: ["/app/entrypoint.sh"]
    command: >
      bash -c "
      while true; do
        flask generate-reports
        sleep 20
      done
      "
    volumes:
      - reports_data:/app/reports

volumes:
  postgres_data:
  reports_data:
